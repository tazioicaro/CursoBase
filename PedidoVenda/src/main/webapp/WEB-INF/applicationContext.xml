
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Config de um Bean Spring para autenticação personalizada -->
	<beans:bean id="appUsersDetailsService"
		class="com.algaworks.cursojavaee.security.AppUsersDetailsService" />


	<!-- Liberando os recursos do JSF e Login da segurança -->
	<http pattern="/javax.faces.resource/**" security="none" />
	<http pattern="/Login.xhtml" security="none" />
	<http pattern="/Erro.xhtml" security="none" />

	<!-- Neste proketo os grupos e permissões serão iguais -->
	<http auto-config="false" use-expressions="true">


		<intercept-url pattern="/Home.xhtml" access="isAuthenticated()" />

		<intercept-url pattern="/pedidos/**"
			access="hasAnyRole('VENDEDORES','AUXILIARES','ADMINISTRADORES')" />

		<intercept-url pattern="/produtos/**"
			access="hasAnyRole('ADMINISTRADORES')" />

		<intercept-url pattern="/**" access="denyAll" />
		
		<!-- Quando o usuário for logado com sucesso será direcionado para o /
		 ou seja, a raíz do sistema que por padrão está a Home.xhtml -->
		<form-login login-page="/Login.xhtml" default-target-url="/"
		  always-use-default-target="true"/>
		  
		  <logout logout-url="/j_spring_security_logout" invalidate-session="true"/>
	</http>

	<authentication-manager>

		<authentication-provider user-service-ref="appUsersDetailsService">
			<!-- <password-encoder hash="md5"/> -->

		</authentication-provider>
	</authentication-manager>



	<!-- hasRole('ROLE_ADMINISTRADORES')" -->
</beans:beans>