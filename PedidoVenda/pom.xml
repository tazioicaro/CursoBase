<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.algaworks</groupId>
	<artifactId>PedidoVenda</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	</properties>

	<dependencies>


		<!-- Prime Faces 5.3 -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>5.3</version>
			<scope>compile</scope>
		</dependency>

		<!-- JSF MOJARRA 2.2 -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<version>2.2.13</version>
			<scope>compile</scope>
		</dependency>


		<!-- OmniFaces (Utilitarios para JSF, utilização do viewparam) -->
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
			<version>2.1</version>
			<scope>compile</scope>
		</dependency>



		<!-- Wel (Implementação do CDI) -->
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet</artifactId>
			<version>2.3.3.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jandex</artifactId>
			<version>1.2.2.Final</version>
			<scope>compile</scope>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<scope>compile</scope>
		</dependency>


		<!-- Commons Logging (Abstrai a implementação de logging ) -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
		</dependency>

		<!-- Commons Lang (Utilidades) -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
			<scope>compile</scope>
		</dependency>

		<!-- Implementação Bean Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.4.Final</version>
			<scope>compile</scope>
		</dependency>

		<!-- Núcleo do Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.1.0.Final</version>
			<scope>compile</scope>
		</dependency>

		<!-- Implementação do EntityManager do JPA -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>5.1.0.Final</version>
			<scope>compile</scope>
		</dependency>

		<!-- Driver JDBC do Mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
			<scope>compile</scope>
		</dependency>


		<!-- https://github.com/codylerum/simple-email faz parte do projeto O mesmo 
			foi baixado e instalado através da importação de projeto maven axistente. 
			Depois foi necessário ir em RunAs e clicar maven install. Assim será possível 
			utilizar em vários projetos maven dentro do eclipe -->


		<!-- Abstração para envio de e-mails -->
		<dependency>
			<groupId>com.outjected</groupId>
			<artifactId>simple-email</artifactId>
			<version>0.2.1</version>
			<scope>compile</scope>
		</dependency>

		<!-- Requerido para envio de e-mails -->

		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.5.5</version>
		</dependency>

		<!-- <dependency> <groupId>javax.mail</groupId> <artifactId>javax.mail-api</artifactId> 
			<version>1.5.5</version> </dependency> -->


		<!-- Usamos para templates de emails -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
			<scope>compile</scope>
		</dependency>

		<!-- Usamos para formatar números em templates -->
		<dependency>
			<groupId>velocity-tools</groupId>
			<artifactId>velocity-tools-generic</artifactId>
			<version>1.4</version>
			<scope>compile</scope>
		</dependency>

		<!-- Spring Security (autenticação e autorização) -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>4.1.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>5.1.2</version>
			<scope>compile</scope>
		</dependency>



		<!-- API Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>

		<finalName>PedidoVenda</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>

			</plugin>
		</plugins>

	</build>


</project>